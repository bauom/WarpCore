[workspace]
members = [
    "crates/core",
    "crates/backends/llama_cpp",
    "crates/backends/openai",
    "crates/backends/anthropic",
    "crates/backends/diffusion-rs",
    "crates/examples",
    ".", # Add the root package itself to the workspace members
]
resolver = "2"

[workspace.dependencies]
anyhow = "1.0"
tokio = { version = "1", features = ["full"] }
async-trait = "0.1"
thiserror = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tracing = "0.1"
dotenvy = "0.15"
reqwest = { version = "0.12", features = ["json"] }
async-openai = { version = "0.21.0", default-features = false, features = ["rustls"] }
futures = "0.3"
tokio-stream = "0.1"
pin-project-lite = "0.2"
async-stream = "0.3"
bytes = "1"
anthropic = { version = "0.0.8", default-features = false }

# Placeholder for backend dependencies - manage versions centrally
# llama_cpp_rs = { version = "...", optional = true } # Example
# async-openai = { version = "...", optional = true } # Example

# Common dependencies used across crates
once_cell = "1.19"

# Workspace-level features control optional dependencies in the root package
[features]
default = []
llama_cpp = ["warpcore-llama-cpp"] # Enable dependency in root pkg
openai = ["warpcore-openai"]    # Enable the optional backend dependency in the root package.
anthropic = ["warpcore-anthropic"]
diffusion-rs = ["warpcore-diffusion-rs"]
hive = ["warpcore-hive"]
candle = []    # Future
all = ["llama_cpp", "openai", "anthropic", "diffusion-rs", "warpcore-hive"] # Enable all optional dependencies in the root package.

# Root package definition (warpcore)
[package]
name = "warpcore"
version = "0.1.0"
edition = "2021"

[dependencies]
warpcore-core = { path = "crates/core", version = "0.1.0" }
warpcore-llama-cpp = { path = "crates/backends/llama_cpp", version = "0.1.0", optional = true }
warpcore-openai = { path = "crates/backends/openai", version = "0.1.0", optional = true }
warpcore-anthropic = { path = "crates/backends/anthropic", version = "0.1.0", optional = true }
warpcore-diffusion-rs = { path = "crates/backends/diffusion-rs", version = "0.1.0", optional = true }
warpcore-hive = { path = "crates/backends/hive", version = "0.1.0", optional = true }

tokio = { workspace = true }
anyhow = { workspace = true } 
tokio-stream.workspace = true
